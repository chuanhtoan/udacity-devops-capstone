version: 2.1

orbs:
  node: circleci/node@5.0.3
  aws-eks: circleci/aws-eks@2.2.0
  aws-cli: circleci/aws-cli@3.1.3
  kubernetes: circleci/kubernetes@1.3.1

commands:
  install_awscli:
    description: Install aws cli
    steps:
      - run:
          name: Install aws cli
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscli.zip"
            unzip awscli.zip
            sudo ./aws/install

  destroy-environment:
    description: Destroy cloudformation stack given a stack name.
    parameters:
      stack-name:
        type: string
        default: ${STACK_NAME}
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            echo << parameters.stack-name >> \
            aws cloudformation delete-stack --stack-name << parameters.stack-name >>

jobs:
  lint-infras:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Install cfn lint
          command: |
            pip install cfn-lint
      - run:
          name: Validate CloudFormation template
          command: |
            cfn-lint infras/infras.yml

  deploy-infras:
    parameters:
      stack-name:
        description: Name of the CloudFormation stack
        type: string
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup
      - run:
          name: Deploy Cloudformation Template with new Docker image
          no_output_timeout: 30m
          command: |
            aws cloudformation deploy \
            --template-file infras/infras.yml \
            --parameter-overrides $(jq -r '.[] | [.ParameterKey, .ParameterValue] | "\(.[0])=\(.[1])"' ./infras/infras-params.json) \
            --stack-name << parameters.stack-name >> \
            --capabilities "CAPABILITY_IAM" "CAPABILITY_NAMED_IAM"
      - destroy-environment

workflows:
  capstone:
    jobs:
      - lint-infras
      - deploy-infras:
          stack-name: ${STACK_NAME}
          requires:
            - lint-infras
